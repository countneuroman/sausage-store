stages:
  - build
  - test
  - notify
include:
  - local: .gitlab/ci/templates/telegram-notification.yml

variables:
  SEND_TELEGRAM_MESSAGE: "false"

build-frontend:
  stage: build
  script:
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend
  rules:  
    - changes:
          - frontend/**/*

sonarqube-frontend-sast:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [ "" ]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - |
      cd frontend
      sonar-scanner \
        -Dsonar.projectKey=${SONAR_PROJECTKEY_FRONT} \
        -Dsonar.sources=. \
        -Dsonar.host.url=${SONARQUBE_URL} \
        -Dsonar.login=${SONAR_LOGIN_FRONT}
  rules:  
    - changes:
          - frontend/**/*
  needs:
    - build-frontend

telegram-notification-frontend:
  extends:
    - .telegram-notification
  stage: notify
  variables:
    NOTIFICATION: $SEND_TELEGRAM_MESSAGE
    ARTIFACT_JOB_NAME: "build-frontend"
    APP_NAME: "frontend"
  rules:  
    - changes:
          - frontend/**/*
  needs:
    - sonarqube-frontend-sast