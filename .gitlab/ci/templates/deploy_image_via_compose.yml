.deploy-via_compose:
  stage: deploy
  variables:
    COMPOSE_PATH: ""
    SERVICE_NAME: ""
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - 'command -v docker-compose >/dev/null || ( apt-get update -y && apt-get install docker-compose -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - ssh-keyscan ${DEV_HOST} >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    # https://github.com/docker/compose/issues/6428
    - ssh -nNT -L /tmp/socket.remote:/var/run/docker.sock $DEV_USER@$DEV_HOST & export TUNNEL_PID=$!
    - export DOCKER_HOST=unix:///tmp/socket.remote
  script:
    - echo $SPRING_POSTGRES_DATASOURCE_PASSWORD
    - docker login -u ${CI_REGISTRY_USER} -p${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker-compose -f ${COMPOSE_PATH} pull ${SERVICE_NAME}
    - docker-compose -f ${COMPOSE_PATH} up -d ${SERVICE_NAME}
    - docker rmi $(docker images -q --filter "reference=${CI_REGISTRY_IMAGE}/${SERVICE_NAME}" --filter "dangling=true")
  after_script:
    - kill $TUNNEL_PID
    - rm -f /tmp/socket.remote